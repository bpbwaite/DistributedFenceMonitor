%/*
%  FILE: finiteTuning.m
%  VERSION: 1.0.0
%  DATE: 15 April 2023
%  PROJECT: Distributed Fence Monitor Capstone
%  AUTHORS: Briellyn Braithwaite
%  DESCRIPTION: Tool for tuning the Low-Pass Filter
%*/
%%
close all
clearvars
format longg
%% New: Bruder's recommendation
% Finite Filter Tuning
Fs = 100;
lpf_hz = 12;    % f_c cutoff frequency
N = 8; % elements in the filter, 
       % more yield greater precision but greater processing time
X = [ 1 2 3 4 ]; % data to filter

% FIR filter setup
omega = 2*pi*lpf_hz ; % fc in rad/sample
tau = (0:N-1)./Fs;
FIR = exp(-1*omega*tau); % From the inverse Laplace of a LPF 1/(s+Wc)
FIR = FIR./sum(FIR); % force filter to have no DC offset

% replicates conv('full')
H = FIR;
L = length(X)+length(H)-1;
y = zeros(1, L);

for n=0:length(X)-1
    y(n+1) = 0;
    for k = 0:n
        if((n-k+1) <= length(H))
            y(n+1) = y(n+1) + X(k+1) * H(n - k + 1);
        end
    end
end


%% Verify against FIR computation done on Arduino

fer = [0.5308,0.2497,0.1175,0.0553,0.0260,0.0122,0.0058,0.0027];
er_in_fir = max(FIR-fer);

ogData = [0.53011,4.77098,0.71073,0.09398,0.02350,0.02350,0.47578,0.09398,0.01322,0.00587,0.00147,0.03671,0.00147,1.79885,0.00587,1.23496,0.37592,0.24817,0.42438,0.37592,0.07195,0.05286,0.24817,0.28782,0.24817,0.11894,0.33040,0.77681,0.84583,0.21146,0.14684,0.11894,0.01322,0.14684,0.07195,0.00147,0.03671,0.05286,0.28782,0.42438,0.00587,0.02350,0.05286,0.02350,0.07195,0.00147,0.03671,0.11894,0.05286,0.07195,0.17768,0.28782,3.38330,1.50369,0.07195,0.71073,0.24817,0.02350,0.02350,0.09398,0.11894,0.09398,0.00587,0.01322,0.14684,0.07195,0.14684,0.07195,7.40244,0.14684,0.64758,0.47578,0.00147,0.71073,0.71073,0.24817,0.07195,0.14684,0.17768,0.02350,0.03671,0.05286,0.00587,0.00000,0.00147,0.00147,0.00147,0.00147,0.00587,0.00000,0.00147,0.00147,0.00147,0.00147,0.00147,0.01322,0.00147,0.00587,0.00587,0.00000,0.00147,0.00147,0.00000,0.01322,0.00000,0.00147,0.00587,0.00000,0.00147,0.00587,0.00147,0.00147,0.00587,0.00147,0.00147,0.00000,0.00587,0.00000,0.00147,0.00587,0.00000,0.00147,0.00147,0.00147,0.00000,0.00147,0.00147,0.00147,0.00587,0.00147,0.00147,0.00147,0.00000,0.00147,0.00000,0.00147,0.00147,0.00147,0.00147,0.00587,0.00587,0.00147,0.00147,0.00587,0.00147,0.00000,0.00000,0.00147,0.00147,0.00587,0.00587,0.00147,0.00147,0.00147,0.00147,0.00147,0.00147,0.00147,0.00000,0.00147,0.00147,0.00000,0.00000,0.00587,0.00147,0.00587,0.00000,0.00000,0.00587,0.00000,0.00587,0.00147,0.00147,0.00587,0.00147,0.00587,0.00587,0.00587,0.00147,0.00147,0.00587,0.00147,0.00147,0.00587,0.00587,0.00147,0.00147,0.00000,0.00587,0.00147,0.00147,0.00000,0.00587,0.00000,0.00000,0.00147,0.00000,0.00000,0.00000,0.00147];
ys = [0.28137, 2.66475, 1.63098, 0.81724, 0.39697, 0.19924, 0.34628, 0.21280, 0.10646, 0.04713, 0.02205, 0.02974, 0.01474, 0.96171, 0.45498, 0.86945, 0.60858, 0.41805, 0.42194, 0.39801, 0.22545, 0.13184, 0.19374, 0.24235, 0.24527, 0.17821, 0.25868, 0.53354, 0.69989, 0.44146, 0.28533, 0.19701, 0.09939, 0.12455, 0.09637, 0.04513, 0.03964, 0.04644, 0.17443, 0.30717, 0.14762, 0.08174, 0.06642, 0.04372, 0.05872, 0.02834, 0.03245, 0.07786, 0.06468, 0.06860, 0.12652, 0.21226, 1.89558, 1.68998, 0.83326, 0.76913, 0.49353, 0.24458, 0.12732, 0.10942, 0.11030, 0.09986, 0.05001, 0.02964, 0.09157, 0.08125, 0.11614, 0.09271, 3.97257, 1.94688, 1.25971, 0.84520, 0.39825, 0.56452, 0.64266, 0.43400, 0.23295, 0.18736, 0.18163, 0.09732, 0.06527, 0.05786, 0.02944, 0.01353, 0.00705, 0.00391, 0.00239, 0.00188, 0.00395, 0.00179, 0.00162, 0.00154, 0.00150, 0.00148, 0.00148, 0.00771, 0.00440, 0.00519, 0.00556, 0.00261, 0.00201, 0.00172, 0.00081, 0.00738, 0.00347, 0.00240, 0.00424, 0.00200, 0.00172, 0.00392, 0.00263, 0.00200, 0.00406, 0.00269, 0.00204, 0.00096, 0.00357, 0.00167, 0.00156, 0.00385, 0.00180, 0.00163, 0.00154, 0.00151, 0.00070, 0.00111, 0.00130, 0.00138, 0.00377, 0.00255, 0.00198, 0.00171, 0.00080, 0.00116, 0.00054, 0.00103, 0.00126, 0.00137, 0.00142, 0.00378, 0.00490, 0.00308, 0.00223, 0.00416, 0.00274, 0.00129, 0.00060, 0.00106, 0.00127, 0.00371, 0.00486, 0.00306, 0.00222, 0.00182, 0.00164, 0.00155, 0.00151, 0.00148, 0.00069, 0.00110, 0.00130, 0.00061, 0.00028, 0.00325, 0.00231, 0.00420, 0.00198, 0.00093, 0.00355, 0.00167, 0.00390, 0.00261, 0.00200, 0.00405, 0.00269, 0.00438, 0.00517, 0.00555, 0.00338, 0.00237, 0.00423, 0.00276, 0.00208, 0.00409, 0.00503, 0.00314, 0.00225, 0.00106, 0.00361, 0.00248, 0.00194, 0.00091, 0.00354, 0.00166, 0.00078, 0.00115, 0.00053, 0.00025, 0.00011, 0.00083, 0.00038, 0.00018, 0.00009, 0.00004, 0.00002, 0.00001, 0.00000];

figure, hold on
plot(ogData, 'k-.')
plot(ys, 'b', 'linewidth', 6)
plot(conv(ogData, FIR), 'r', 'linewidth', 2)

xlabel('Sample')
ylabel('Relative Power')
grid on

legend('Accel. Data', 'After Arduino FIR', 'After MATLAB Filter')
